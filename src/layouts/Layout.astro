---
import "@/styles/global.css";
const { title } = Astro.props as { title: string };
---

<script is:inline>
  const getThemePreference = () => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme");
    }
    return window.matchMedia("(prefers-color-scheme: dark)").matches
      ? "dark"
      : "light";
  };
  const isDark = getThemePreference() === "dark";
  document.documentElement.classList[isDark ? "add" : "remove"]("dark");

  if (typeof localStorage !== "undefined") {
    const observer = new MutationObserver(() => {
      const isDark = document.documentElement.classList.contains("dark");
      localStorage.setItem("theme", isDark ? "dark" : "light");
    });
    observer.observe(document.documentElement, {
      attributes: true,
      attributeFilter: ["class"],
    });
  }
</script>

<html lang="fr">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <link
      rel="icon"
      type="image/png"
      sizes="192x192"
      href={`${import.meta.env.BASE_URL}android-chrome-192x192.png`}
    />
    <link
      rel="icon"
      type="image/png"
      sizes="512x512"
      href={`${import.meta.env.BASE_URL}android-chrome-512x512.png`}
    />

    <link
      rel="icon"
      type="image/png"
      sizes="32x32"
      href={`${import.meta.env.BASE_URL}favicon-32x32.png`}
    />
    <link
      rel="icon"
      type="image/png"
      sizes="16x16"
      href={`${import.meta.env.BASE_URL}favicon-16x16.png`}
    />
    <link rel="shortcut icon" href={`${import.meta.env.BASE_URL}favicon.ico`} />
    <link
      rel="apple-touch-icon"
      sizes="180x180"
      href={`${import.meta.env.BASE_URL}apple-touch-icon.png`}
    />
    <link
      rel="manifest"
      href={`${import.meta.env.BASE_URL}manifest.webmanifest`}
    />

    <title>{title}</title>
  </head>
  <body>
    <main class="max-w-3xl mx-auto p-5 flex flex-col md:flex-row min-h-screen">
      <slot />
    </main>
  </body>
</html>

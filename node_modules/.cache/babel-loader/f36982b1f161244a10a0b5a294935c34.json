{"ast":null,"code":"import p5 from \"p5\";\nimport Orb from \"../helpers/Orb\";\nimport { onMounted } from \"@vue/runtime-core\";\nexport default {\n  name: \"SweetBackground\",\n\n  setup() {\n    onMounted(() => {\n      const sketch = s => {\n        let pg;\n        let w = window.innerWidth;\n        let h = window.innerHeight;\n        const orbs = [];\n\n        s.setup = () => {\n          s.createCanvas(w, h); //s.noStroke();\n\n          pg = s.createGraphics(w, h);\n          pg.noStroke();\n          let originX = window.innerWidth / 1.25;\n          let originY = window.innerWidth < 1000 ? window.innerHeight : window.innerHeight / 1.375;\n\n          for (let i = 0; i < 10; i++) {\n            const orb = new Orb(originX, originY, s.color(\"#ff0000\"));\n            orbs.push(orb);\n          }\n\n          originX = window.innerWidth * 0.2;\n          originY = window.innerWidth < 1000 ? 0 : window.innerHeight * 0.275;\n\n          for (let i = 0; i < 10; i++) {\n            const orb = new Orb(originX, originY, s.color(\"#0000ff\"));\n            orbs.push(orb);\n          }\n        };\n\n        s.draw = () => {\n          s.background(200);\n          pg.background(100);\n          pg.fill(20, 200, 20);\n          pg.ellipse(s.random(10), 10, 10, 10);\n\n          for (const orb of orbs) {\n            orb.move(pg);\n            orb.render(pg);\n          }\n\n          s.image(pg, 50, 50);\n        };\n\n        window.onresize = function () {\n          // assigns new values for width and height variables\n          w = window.innerWidth;\n          h = window.innerHeight;\n          s.resizeCanvas(w, h);\n          pg.resizeCanvas(w, h);\n        };\n      };\n\n      const sketchInstance = new p5(sketch, \"orb-sketch\");\n    });\n  }\n\n};","map":{"version":3,"mappings":"AAQA,OAAOA,EAAP,MAAe,IAAf;AACA,OAAOC,GAAP,MAAgB,gBAAhB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AAEA,eAAe;AACbC,MAAI,EAAE,iBADO;;AAEbC,OAAK,GAAG;AACNF,aAAS,CAAC,MAAM;AACd,YAAMG,MAAK,GAAKC,CAAD,IAAO;AACpB,YAAIC,EAAJ;AAEA,YAAIC,IAAIC,MAAM,CAACC,UAAf;AACA,YAAIC,IAAIF,MAAM,CAACG,WAAf;AAEA,cAAMC,IAAG,GAAI,EAAb;;AAEAP,SAAC,CAACF,KAAF,GAAU,MAAM;AACdE,WAAC,CAACQ,YAAF,CAAeN,CAAf,EAAkBG,CAAlB,EADc,CAEd;;AAEAJ,YAAC,GAAID,CAAC,CAACS,cAAF,CAAiBP,CAAjB,EAAoBG,CAApB,CAAL;AACAJ,YAAE,CAACS,QAAH;AAEA,cAAIC,OAAM,GAAIR,MAAM,CAACC,UAAP,GAAoB,IAAlC;AACA,cAAIQ,OAAM,GACRT,MAAM,CAACC,UAAP,GAAoB,IAApB,GACID,MAAM,CAACG,WADX,GAEIH,MAAM,CAACG,WAAP,GAAqB,KAH3B;;AAKA,eAAK,IAAIO,IAAI,CAAb,EAAgBA,IAAI,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3B,kBAAMC,GAAE,GAAI,IAAInB,GAAJ,CAAQgB,OAAR,EAAiBC,OAAjB,EAA0BZ,CAAC,CAACe,KAAF,CAAQ,SAAR,CAA1B,CAAZ;AACAR,gBAAI,CAACS,IAAL,CAAUF,GAAV;AACF;;AAEAH,iBAAM,GAAIR,MAAM,CAACC,UAAP,GAAoB,GAA9B;AACAQ,iBAAM,GAAIT,MAAM,CAACC,UAAP,GAAoB,IAApB,GAA2B,CAA3B,GAA+BD,MAAM,CAACG,WAAP,GAAqB,KAA9D;;AAEA,eAAK,IAAIO,IAAI,CAAb,EAAgBA,IAAI,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3B,kBAAMC,GAAE,GAAI,IAAInB,GAAJ,CAAQgB,OAAR,EAAiBC,OAAjB,EAA0BZ,CAAC,CAACe,KAAF,CAAQ,SAAR,CAA1B,CAAZ;AACAR,gBAAI,CAACS,IAAL,CAAUF,GAAV;AACF;AACD,SAzBD;;AA2BAd,SAAC,CAACiB,IAAF,GAAS,MAAM;AACbjB,WAAC,CAACkB,UAAF,CAAa,GAAb;AACAjB,YAAE,CAACiB,UAAH,CAAc,GAAd;AACAjB,YAAE,CAACkB,IAAH,CAAQ,EAAR,EAAY,GAAZ,EAAiB,EAAjB;AACAlB,YAAE,CAACmB,OAAH,CAAWpB,CAAC,CAACqB,MAAF,CAAS,EAAT,CAAX,EAAyB,EAAzB,EAA6B,EAA7B,EAAiC,EAAjC;;AAEA,eAAK,MAAMP,GAAX,IAAkBP,IAAlB,EAAwB;AACtBO,eAAG,CAACQ,IAAJ,CAASrB,EAAT;AACAa,eAAG,CAACS,MAAJ,CAAWtB,EAAX;AACF;;AACAD,WAAC,CAACwB,KAAF,CAAQvB,EAAR,EAAY,EAAZ,EAAgB,EAAhB;AACD,SAXD;;AAaAE,cAAM,CAACsB,QAAP,GAAkB,YAAY;AAC5B;AACAvB,cAAIC,MAAM,CAACC,UAAX;AACAC,cAAIF,MAAM,CAACG,WAAX;AACAN,WAAC,CAAC0B,YAAF,CAAexB,CAAf,EAAkBG,CAAlB;AACAJ,YAAE,CAACyB,YAAH,CAAgBxB,CAAhB,EAAmBG,CAAnB;AACD,SAND;AAOD,OAvDD;;AAyDA,YAAMsB,cAAa,GAAI,IAAIjC,EAAJ,CAAOK,MAAP,EAAe,YAAf,CAAvB;AACD,KA3DQ,CAAT;AA4DD;;AA/DY,CAAf","names":["p5","Orb","onMounted","name","setup","sketch","s","pg","w","window","innerWidth","h","innerHeight","orbs","createCanvas","createGraphics","noStroke","originX","originY","i","orb","color","push","draw","background","fill","ellipse","random","move","render","image","onresize","resizeCanvas","sketchInstance"],"sourceRoot":"","sources":["/home/maxime/personal_repos/sweet-portfolio/src/components/SweetBackground.vue"],"sourcesContent":["<template>\n  <!-- Canvas -->\n\n  <div id=\"orb-sketch\"></div>\n  <div class=\"test\"></div>\n</template>\n\n<script>\nimport p5 from \"p5\";\nimport Orb from \"../helpers/Orb\";\nimport { onMounted } from \"@vue/runtime-core\";\n\nexport default {\n  name: \"SweetBackground\",\n  setup() {\n    onMounted(() => {\n      const sketch = (s) => {\n        let pg;\n\n        let w = window.innerWidth;\n        let h = window.innerHeight;\n\n        const orbs = [];\n\n        s.setup = () => {\n          s.createCanvas(w, h);\n          //s.noStroke();\n\n          pg = s.createGraphics(w, h);\n          pg.noStroke();\n\n          let originX = window.innerWidth / 1.25;\n          let originY =\n            window.innerWidth < 1000\n              ? window.innerHeight\n              : window.innerHeight / 1.375;\n\n          for (let i = 0; i < 10; i++) {\n            const orb = new Orb(originX, originY, s.color(\"#ff0000\"));\n            orbs.push(orb);\n          }\n\n          originX = window.innerWidth * 0.2;\n          originY = window.innerWidth < 1000 ? 0 : window.innerHeight * 0.275;\n\n          for (let i = 0; i < 10; i++) {\n            const orb = new Orb(originX, originY, s.color(\"#0000ff\"));\n            orbs.push(orb);\n          }\n        };\n\n        s.draw = () => {\n          s.background(200);\n          pg.background(100);\n          pg.fill(20, 200, 20);\n          pg.ellipse(s.random(10), 10, 10, 10);\n\n          for (const orb of orbs) {\n            orb.move(pg);\n            orb.render(pg);\n          }\n          s.image(pg, 50, 50);\n        };\n\n        window.onresize = function () {\n          // assigns new values for width and height variables\n          w = window.innerWidth;\n          h = window.innerHeight;\n          s.resizeCanvas(w, h);\n          pg.resizeCanvas(w, h);\n        };\n      };\n\n      const sketchInstance = new p5(sketch, \"orb-sketch\");\n    });\n  },\n};\n</script>\n\n<style>\n@supports ((-webkit-backdrop-filter: none) or (backdrop-filter: none)) {\n  #orb-sketch {\n    position: fixed;\n  }\n  .test {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    z-index: 0;\n    background: rgba(170, 196, 200, 0.1);\n    backdrop-filter: saturate(180%) blur(3rem);\n    border: 10px black;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nimport _imports_0 from './assets/me.png';\nconst _hoisted_1 = {\n  style: {\n    \"display\": \"none\"\n  }\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", {\n  style: {\n    \"opacity\": \"0.99\"\n  }\n}, [/*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_0,\n  alt: \"\",\n  class: \"about__avatar-me\"\n})], -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_sweet_background = _resolveComponent(\"sweet-background\");\n\n  const _component_app_base = _resolveComponent(\"app-base\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_sweet_background), _createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_app_base)]), _hoisted_2], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";OAMSA,gBAAqB;;AAJvBC,OAAqB,EAArB;AAAA;AAAA;;;gCAGLC,oBAEM,KAFN,EAEM;AAFDD,OAAqB,EAArB;AAAA;AAAA;AAEC,CAFN,EAA0B,cACxBC,oBAA6D,KAA7D,EAA6D;AAAxDC,KAAqB,EAArBH,UAAwD;AAAlCI,KAAG,EAAC,EAA8B;AAA3BC,OAAK,EAAC;AAAqB,CAA7D,CADwB,CAA1B;;AAAA;;;;;;;6DAJAC,aAAoBC,2BAApB,GACAL,oBAEM,KAFN,cAEM,CADJI,aAAYE,mBAAZ,CACI,CAFN,GAGAC","names":["_imports_0","style","_createElementVNode","src","alt","class","_createVNode","_component_sweet_background","_component_app_base","_hoisted_2"],"sourceRoot":"","sources":["/Users/maximeconceicao/personal_repos/sweet-portfolio/src/App.vue"],"sourcesContent":["<template>\n  <sweet-background />\n  <div style=\"display: none\">\n    <app-base />\n  </div>\n  <div style=\"opacity: 0.99\">\n    <img src=\"./assets/me.png\" alt=\"\" class=\"about__avatar-me\" />\n  </div>\n</template>\n\n<script>\nimport SweetBackground from \"./components/SweetBackground.vue\";\nimport FlapText from \"./helpers/FlapText\";\nimport AppBase from \"./layout/AppBase.vue\";\nexport default {\n  name: \"App\",\n  components: { AppBase, SweetBackground },\n  mounted() {\n    document.onreadystatechange = () => {\n      if (document.readyState == \"complete\") {\n        const characters =\n          \"\\\"'“”‘’¹²³!#$&%()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~½¼¡«»×▓▒░\".split(\n            \"\"\n          );\n\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const shuffledCharacters = characters.sort(\n          (a, b) => 0.5 - Math.random()\n        );\n\n        (function () {\n          const flapTextElements = [];\n\n          document.querySelectorAll(\".flap\").forEach((flapElement) => {\n            const lines = flapElement.innerText\n              .trimEnd()\n              .split(\"\\n\")\n              .map((line) => line.trimEnd().replaceAll(\"\\t\", \"\"));\n            console.log(\"LINEs\", lines);\n            flapElement.innerHTML = \"\";\n\n            lines.forEach((line) => {\n              const span = document.createElement(\"span\");\n              span.dataset.paused = \"true\";\n              flapElement.appendChild(span);\n\n              new IntersectionObserver(\n                (entries) => {\n                  if (entries[0].isIntersecting === true) {\n                    span.dataset.paused = \"false\";\n                  }\n                },\n                { threshold: [0] }\n              ).observe(span);\n\n              const flapText = new FlapText(span, shuffledCharacters);\n              flapText.setInitialPositions(line);\n              flapText.shufflePositions();\n\n              flapText.render();\n\n              span.addEventListener(\"mouseenter\", () => {\n                flapText.shufflePositions();\n              });\n\n              flapTextElements.push(flapText);\n            });\n          });\n\n          let frameCount = 0;\n          requestAnimationFrame(function animate() {\n            requestAnimationFrame(animate);\n            if (frameCount++ % 2 === 0) {\n              for (const flapText of flapTextElements) {\n                flapText.flap();\n                flapText.render();\n              }\n            }\n          });\n        })();\n      }\n    };\n  },\n};\n</script>\n\n<style lang=\"scss\">\n@import \"./styles/style.scss\";\n</style>\n"]},"metadata":{},"sourceType":"module"}
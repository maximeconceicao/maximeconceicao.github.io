{"ast":null,"code":"import SweetBackground from \"./components/SweetBackground.vue\";\nimport FlapText from \"./helpers/FlapText\";\nimport AppBase from \"./layout/AppBase.vue\";\nexport default {\n  name: \"App\",\n  components: {\n    AppBase,\n    SweetBackground\n  },\n\n  mounted() {\n    document.onreadystatechange = () => {\n      if (document.readyState == \"complete\") {\n        const characters = \"\\\"'“”‘’¹²³!#$&%()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~½¼¡«»×▓▒░│┤▀└┴┬├─┼┐┌└┘\".split(\"\"); // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n        const shuffledCharacters = characters.sort((a, b) => 0.5 - Math.random());\n\n        (function () {\n          const flapTextElements = [];\n          document.querySelectorAll(\".flap\").forEach(flapElement => {\n            const lines = flapElement.innerText.trimEnd().split(\"\\n\").map(line => line.trimEnd().replaceAll(\"\\t\", \"\"));\n            console.log(\"LINEs\", lines);\n            flapElement.innerHTML = \"\";\n            lines.forEach(line => {\n              const span = document.createElement(\"span\");\n              span.dataset.paused = \"true\";\n              flapElement.appendChild(span);\n              new IntersectionObserver(entries => {\n                if (entries[0].isIntersecting === true) {\n                  span.dataset.paused = \"false\";\n                }\n              }, {\n                threshold: [0]\n              }).observe(span);\n              const flapText = new FlapText(span, shuffledCharacters);\n              flapText.setInitialPositions(line);\n              flapText.shufflePositions();\n              flapText.render();\n              span.addEventListener(\"mouseenter\", () => {\n                flapText.shufflePositions();\n              });\n              flapTextElements.push(flapText);\n            });\n          });\n          let frameCount = 0;\n          requestAnimationFrame(function animate() {\n            requestAnimationFrame(animate);\n\n            if (frameCount++ % 2 === 0) {\n              for (const flapText of flapTextElements) {\n                flapText.flap();\n                flapText.render();\n              }\n            }\n          });\n        })();\n      }\n    };\n  }\n\n};","map":{"version":3,"mappings":"AAMA,OAAOA,eAAP,MAA4B,kCAA5B;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,eAAe;AACbC,MAAI,EAAE,KADO;AAEbC,YAAU,EAAE;AAAEF,WAAF;AAAWF;AAAX,GAFC;;AAGbK,SAAO,GAAG;AACRC,YAAQ,CAACC,kBAAT,GAA8B,MAAM;AAClC,UAAID,QAAQ,CAACE,UAAT,IAAuB,UAA3B,EAAuC;AACrC,cAAMC,UAAS,GACb,gIAAgIC,KAAhI,CACE,EADF,CADF,CADqC,CAMrC;;AACA,cAAMC,kBAAiB,GAAIF,UAAU,CAACG,IAAX,CACzB,CAACC,CAAD,EAAIC,CAAJ,KAAU,MAAMC,IAAI,CAACC,MAAL,EADS,CAA3B;;AAIA,SAAC,YAAY;AACX,gBAAMC,gBAAe,GAAI,EAAzB;AAEAX,kBAAQ,CAACY,gBAAT,CAA0B,OAA1B,EAAmCC,OAAnC,CAA4CC,WAAD,IAAiB;AAC1D,kBAAMC,KAAI,GAAID,WAAW,CAACE,SAAZ,CACXC,OADW,GAEXb,KAFW,CAEL,IAFK,EAGXc,GAHW,CAGNC,IAAD,IAAUA,IAAI,CAACF,OAAL,GAAeG,UAAf,CAA0B,IAA1B,EAAgC,EAAhC,CAHH,CAAd;AAIAC,mBAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBP,KAArB;AACAD,uBAAW,CAACS,SAAZ,GAAwB,EAAxB;AAEAR,iBAAK,CAACF,OAAN,CAAeM,IAAD,IAAU;AACtB,oBAAMK,IAAG,GAAIxB,QAAQ,CAACyB,aAAT,CAAuB,MAAvB,CAAb;AACAD,kBAAI,CAACE,OAAL,CAAaC,MAAb,GAAsB,MAAtB;AACAb,yBAAW,CAACc,WAAZ,CAAwBJ,IAAxB;AAEA,kBAAIK,oBAAJ,CACGC,OAAD,IAAa;AACX,oBAAIA,OAAO,CAAC,CAAD,CAAP,CAAWC,cAAX,KAA8B,IAAlC,EAAwC;AACtCP,sBAAI,CAACE,OAAL,CAAaC,MAAb,GAAsB,OAAtB;AACF;AACD,eALH,EAME;AAAEK,yBAAS,EAAE,CAAC,CAAD;AAAb,eANF,EAOEC,OAPF,CAOUT,IAPV;AASA,oBAAMU,QAAO,GAAI,IAAIvC,QAAJ,CAAa6B,IAAb,EAAmBnB,kBAAnB,CAAjB;AACA6B,sBAAQ,CAACC,mBAAT,CAA6BhB,IAA7B;AACAe,sBAAQ,CAACE,gBAAT;AAEAF,sBAAQ,CAACG,MAAT;AAEAb,kBAAI,CAACc,gBAAL,CAAsB,YAAtB,EAAoC,MAAM;AACxCJ,wBAAQ,CAACE,gBAAT;AACD,eAFD;AAIAzB,8BAAgB,CAAC4B,IAAjB,CAAsBL,QAAtB;AACD,aAzBD;AA0BD,WAlCD;AAoCA,cAAIM,UAAS,GAAI,CAAjB;AACAC,+BAAqB,CAAC,SAASC,OAAT,GAAmB;AACvCD,iCAAqB,CAACC,OAAD,CAArB;;AACA,gBAAIF,UAAU,KAAK,CAAf,KAAqB,CAAzB,EAA4B;AAC1B,mBAAK,MAAMN,QAAX,IAAuBvB,gBAAvB,EAAyC;AACvCuB,wBAAQ,CAACS,IAAT;AACAT,wBAAQ,CAACG,MAAT;AACF;AACF;AACD,WARoB,CAArB;AASD,SAjDD;AAkDF;AACD,KA/DD;AAgED;;AApEY,CAAf","names":["SweetBackground","FlapText","AppBase","name","components","mounted","document","onreadystatechange","readyState","characters","split","shuffledCharacters","sort","a","b","Math","random","flapTextElements","querySelectorAll","forEach","flapElement","lines","innerText","trimEnd","map","line","replaceAll","console","log","innerHTML","span","createElement","dataset","paused","appendChild","IntersectionObserver","entries","isIntersecting","threshold","observe","flapText","setInitialPositions","shufflePositions","render","addEventListener","push","frameCount","requestAnimationFrame","animate","flap"],"sourceRoot":"","sources":["/Users/maximeconceicao/personal_repos/sweet-portfolio/src/App.vue"],"sourcesContent":["<template>\n  <sweet-background />\n  <app-base />\n</template>\n\n<script>\nimport SweetBackground from \"./components/SweetBackground.vue\";\nimport FlapText from \"./helpers/FlapText\";\nimport AppBase from \"./layout/AppBase.vue\";\nexport default {\n  name: \"App\",\n  components: { AppBase, SweetBackground },\n  mounted() {\n    document.onreadystatechange = () => {\n      if (document.readyState == \"complete\") {\n        const characters =\n          \"\\\"'“”‘’¹²³!#$&%()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~½¼¡«»×▓▒░│┤▀└┴┬├─┼┐┌└┘\".split(\n            \"\"\n          );\n\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const shuffledCharacters = characters.sort(\n          (a, b) => 0.5 - Math.random()\n        );\n\n        (function () {\n          const flapTextElements = [];\n\n          document.querySelectorAll(\".flap\").forEach((flapElement) => {\n            const lines = flapElement.innerText\n              .trimEnd()\n              .split(\"\\n\")\n              .map((line) => line.trimEnd().replaceAll(\"\\t\", \"\"));\n            console.log(\"LINEs\", lines);\n            flapElement.innerHTML = \"\";\n\n            lines.forEach((line) => {\n              const span = document.createElement(\"span\");\n              span.dataset.paused = \"true\";\n              flapElement.appendChild(span);\n\n              new IntersectionObserver(\n                (entries) => {\n                  if (entries[0].isIntersecting === true) {\n                    span.dataset.paused = \"false\";\n                  }\n                },\n                { threshold: [0] }\n              ).observe(span);\n\n              const flapText = new FlapText(span, shuffledCharacters);\n              flapText.setInitialPositions(line);\n              flapText.shufflePositions();\n\n              flapText.render();\n\n              span.addEventListener(\"mouseenter\", () => {\n                flapText.shufflePositions();\n              });\n\n              flapTextElements.push(flapText);\n            });\n          });\n\n          let frameCount = 0;\n          requestAnimationFrame(function animate() {\n            requestAnimationFrame(animate);\n            if (frameCount++ % 2 === 0) {\n              for (const flapText of flapTextElements) {\n                flapText.flap();\n                flapText.render();\n              }\n            }\n          });\n        })();\n      }\n    };\n  },\n};\n</script>\n\n<style lang=\"scss\">\n@import \"./styles/style.scss\";\n</style>\n"]},"metadata":{},"sourceType":"module"}
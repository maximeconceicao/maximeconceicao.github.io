{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"orb-canvas\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"canvas\", _hoisted_1);\n}","map":{"version":3,"mappings":";;AACUA,OAAK,EAAC;;;uBAAdC,oBAAoC,QAApC","names":["class","_createElementBlock"],"sourceRoot":"","sources":["/home/maxime/personal_repos/sweet-portfolio/src/components/SweetBackground.vue"],"sourcesContent":["<template>\n  <canvas class=\"orb-canvas\"></canvas>\n</template>\n\n<script>\nimport * as PIXI from \"pixi.js\";\nimport Orb from \"../helpers/Orb\";\nimport { KawaseBlurFilter } from \"@pixi/filter-kawase-blur\";\n\nexport default {\n  name: \"SweetBackground\",\n  components: {},\n  methods: {},\n  mounted() {\n    // Create PixiJS app\n    const app = new PIXI.Application({\n      // render to <canvas class=\"orb-canvas\"></canvas>\n      view: document.querySelector(\".orb-canvas\"),\n      // auto adjust size to fit the current window\n      resizeTo: window,\n      // transparent background, we will be creating a gradient background later using CSS\n      backgroundAlpha: 0,\n    });\n\n    app.stage.filters = [new KawaseBlurFilter(30, 10, true)];\n\n    // Create orbs\n    const orbs = [];\n\n    for (let i = 0; i < 10; i++) {\n      // each orb will be black, just for now\n      const orb = new Orb(0x000000);\n      app.stage.addChild(orb.graphics);\n\n      orbs.push(orb);\n    }\n\n    if (!window.matchMedia(\"(prefers-reduced-motion: reduce)\").matches) {\n      app.ticker.add(() => {\n        // update and render each orb, each frame. app.ticker attempts to run at 60fps\n        orbs.forEach((orb) => {\n          orb.update();\n          orb.render();\n        });\n      });\n    } else {\n      // perform one update and render per orb, do not animate\n      orbs.forEach((orb) => {\n        orb.update();\n        orb.render();\n      });\n    }\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}
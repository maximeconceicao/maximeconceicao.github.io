{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"canvas\", {\n  class: \"orb-canvas\"\n}, null, -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" Canvas \"), _hoisted_1], 2112\n  /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;gCAEEA,oBAAoC,QAApC,EAAoC;AAA5BC,OAAK,EAAC;AAAsB,CAApC,EAA0B,IAA1B,EAA0B;AAAA;AAA1B;;;6DADAC,iCACAC","names":["_createElementVNode","class","_createCommentVNode","_hoisted_1"],"sourceRoot":"","sources":["/home/maxime/personal_repos/sweet-portfolio/src/components/SweetBackground.vue"],"sourcesContent":["<template>\n  <!-- Canvas -->\n  <canvas class=\"orb-canvas\"></canvas>\n</template>\n\n<script>\nimport * as PIXI from \"pixi.js\";\nimport Orb from \"../helpers/Orb\";\nimport { KawaseBlurFilter } from \"@pixi/filter-kawase-blur\";\n\nexport default {\n  name: \"SweetBackground\",\n  components: {},\n  mounted() {\n    const app = new PIXI.Application({\n      view: document.querySelector(\".orb-canvas\"),\n      resizeTo: window,\n      backgroundAlpha: 0,\n    });\n\n    app.stage.filters = [new KawaseBlurFilter(30, 20, true)];\n\n    const orbs = [];\n\n    let originX = window.innerWidth / 1.25;\n    let originY =\n      window.innerWidth < 1000\n        ? window.innerHeight\n        : window.innerHeight / 1.375;\n\n    for (let i = 0; i < 10; i++) {\n      const orb = new Orb(0xff0000, originX, originY);\n      app.stage.addChild(orb.graphics);\n\n      orbs.push(orb);\n    }\n\n    originX = window.innerWidth * 0.2;\n    originY = window.innerWidth < 1000 ? 0 : window.innerHeight * 0.275;\n\n    for (let i = 0; i < 10; i++) {\n      const orb = new Orb(0x0000ff, originX, originY);\n      app.stage.addChild(orb.graphics);\n\n      orbs.push(orb);\n    }\n\n    if (!window.matchMedia(\"(prefers-reduced-motion: reduce)\").matches) {\n      app.ticker.add(() => {\n        orbs.forEach((orb) => {\n          orb.update();\n          orb.render();\n        });\n      });\n    } else {\n      orbs.forEach((orb) => {\n        orb.update();\n        orb.render();\n      });\n    }\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}
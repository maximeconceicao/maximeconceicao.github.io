{"ast":null,"code":"import { SHAPES } from \"@/helpers/game.constants\";\n\n// return a random number within a range\nexport function random(min, max) {\n  return Math.random() * (max - min) + min;\n}\nexport function formatShapeIcon(shape) {\n  switch (shape) {\n    case SHAPES.STAR:\n      return \"bi-star-fill\";\n    case SHAPES.SQUARE:\n      return \"bi-square-fill\";\n    case SHAPES.TRIANGLE:\n      return \"bi-triangle-fill\";\n    case SHAPES.CIRCLE:\n      return \"bi-circle-fill\";\n    default:\n      return \"bi-emoji-dizzy\";\n  }\n}\nfunction generateParagraph(wordCount) {\n  const alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n  const alphabetLength = alphabet.length;\n  let paragraph = \"\";\n  for (let i = 0; i < wordCount; i++) {\n    const wordLength = Math.floor(Math.random() * 8) + 3; // Word length between 3 and 10 letters\n    let word = \"\";\n    for (let j = 0; j < wordLength; j++) {\n      const randomLetter = alphabet.charAt(Math.floor(Math.random() * alphabetLength));\n      word += randomLetter;\n    }\n    paragraph += word + \" \";\n  }\n  return paragraph;\n}\n\n// Using the function to generate a paragraph with 5 words\nconst generatedParagraph = generateParagraph(5);\nconsole.log(generatedParagraph);","map":{"version":3,"names":["SHAPES","random","min","max","Math","formatShapeIcon","shape","STAR","SQUARE","TRIANGLE","CIRCLE","generateParagraph","wordCount","alphabet","alphabetLength","length","paragraph","i","wordLength","floor","word","j","randomLetter","charAt","generatedParagraph","console","log"],"sources":["/Users/maximeconceicao/personal_repos/sweet-portfolio/src/helpers/utils.js"],"sourcesContent":["import { SHAPES } from \"@/helpers/game.constants\";\n\n// return a random number within a range\nexport function random(min, max) {\n  return Math.random() * (max - min) + min;\n}\n\nexport function formatShapeIcon(shape) {\n  switch (shape) {\n    case SHAPES.STAR:\n      return \"bi-star-fill\";\n    case SHAPES.SQUARE:\n      return \"bi-square-fill\";\n    case SHAPES.TRIANGLE:\n      return \"bi-triangle-fill\";\n    case SHAPES.CIRCLE:\n      return \"bi-circle-fill\";\n    default:\n      return \"bi-emoji-dizzy\";\n  }\n}\n\nfunction generateParagraph(wordCount) {\n  const alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n  const alphabetLength = alphabet.length;\n  let paragraph = \"\";\n\n  for (let i = 0; i < wordCount; i++) {\n    const wordLength = Math.floor(Math.random() * 8) + 3; // Word length between 3 and 10 letters\n    let word = \"\";\n\n    for (let j = 0; j < wordLength; j++) {\n      const randomLetter = alphabet.charAt(\n        Math.floor(Math.random() * alphabetLength)\n      );\n      word += randomLetter;\n    }\n\n    paragraph += word + \" \";\n  }\n\n  return paragraph;\n}\n\n// Using the function to generate a paragraph with 5 words\nconst generatedParagraph = generateParagraph(5);\nconsole.log(generatedParagraph);\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,0BAA0B;;AAEjD;AACA,OAAO,SAASC,MAAMA,CAACC,GAAG,EAAEC,GAAG,EAAE;EAC/B,OAAOC,IAAI,CAACH,MAAM,CAAC,CAAC,IAAIE,GAAG,GAAGD,GAAG,CAAC,GAAGA,GAAG;AAC1C;AAEA,OAAO,SAASG,eAAeA,CAACC,KAAK,EAAE;EACrC,QAAQA,KAAK;IACX,KAAKN,MAAM,CAACO,IAAI;MACd,OAAO,cAAc;IACvB,KAAKP,MAAM,CAACQ,MAAM;MAChB,OAAO,gBAAgB;IACzB,KAAKR,MAAM,CAACS,QAAQ;MAClB,OAAO,kBAAkB;IAC3B,KAAKT,MAAM,CAACU,MAAM;MAChB,OAAO,gBAAgB;IACzB;MACE,OAAO,gBAAgB;EAC3B;AACF;AAEA,SAASC,iBAAiBA,CAACC,SAAS,EAAE;EACpC,MAAMC,QAAQ,GAAG,4BAA4B;EAC7C,MAAMC,cAAc,GAAGD,QAAQ,CAACE,MAAM;EACtC,IAAIC,SAAS,GAAG,EAAE;EAElB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,SAAS,EAAEK,CAAC,EAAE,EAAE;IAClC,MAAMC,UAAU,GAAGd,IAAI,CAACe,KAAK,CAACf,IAAI,CAACH,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IACtD,IAAImB,IAAI,GAAG,EAAE;IAEb,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,UAAU,EAAEG,CAAC,EAAE,EAAE;MACnC,MAAMC,YAAY,GAAGT,QAAQ,CAACU,MAAM,CAClCnB,IAAI,CAACe,KAAK,CAACf,IAAI,CAACH,MAAM,CAAC,CAAC,GAAGa,cAAc,CAC3C,CAAC;MACDM,IAAI,IAAIE,YAAY;IACtB;IAEAN,SAAS,IAAII,IAAI,GAAG,GAAG;EACzB;EAEA,OAAOJ,SAAS;AAClB;;AAEA;AACA,MAAMQ,kBAAkB,GAAGb,iBAAiB,CAAC,CAAC,CAAC;AAC/Cc,OAAO,CAACC,GAAG,CAACF,kBAAkB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default class FlapText {\n  constructor(element, alphabet) {\n    this.element = element;\n    this.alphabet = alphabet;\n    this.currentPositions = [];\n    this.targetPositions = [];\n    this.randomPositions = [];\n  }\n  setInitialPositions(text) {\n    const textArray = text.split(\"\");\n    const textLength = textArray.length;\n    textArray.forEach((char, index) => {\n      const charIndex = this.alphabet.indexOf(char);\n      if (charIndex === -1) {\n        this.alphabet.push(char);\n        this.targetPositions[index] = this.alphabet.length - 1;\n      } else {\n        this.targetPositions[index] = charIndex;\n      }\n    });\n    this.currentPositions = [...this.targetPositions];\n    this.randomPositions = Array(textLength).fill(0);\n  }\n  shufflePositions() {\n    const randomOffset = Math.floor(10 * Math.random()) + 5;\n    for (let i = 0; i < this.currentPositions.length; i++) {\n      this.currentPositions[i] = (this.currentPositions[i] + this.alphabet.length - randomOffset) % this.alphabet.length;\n      this.randomPositions[i] = Math.floor(10 * Math.random());\n    }\n  }\n  flap() {\n    if (this.element.dataset.paused !== \"false\") {\n      return;\n    }\n    this.currentPositions.forEach((position, index) => {\n      if (this.randomPositions[index] > 0) {\n        this.randomPositions[index]--;\n      } else if (this.currentPositions[index] !== this.targetPositions[index]) {\n        this.currentPositions[index] = (this.currentPositions[index] + 1) % this.alphabet.length;\n      }\n    });\n  }\n  render() {\n    const newText = this.currentPositions.reduce((text, position) => {\n      let char = this.alphabet[position];\n      if (char === \">\") {\n        char = \"&gt;\";\n      } else if (char === \"<\") {\n        char = \"&lt;\";\n      }\n      return text + char;\n    }, \"\");\n    if (this.element.innerHTML !== newText) {\n      this.element.innerHTML = newText;\n      console.log(\"NEW TEXT\", newText);\n    }\n  }\n}","map":{"version":3,"names":["FlapText","constructor","element","alphabet","currentPositions","targetPositions","randomPositions","setInitialPositions","text","textArray","split","textLength","length","forEach","char","index","charIndex","indexOf","push","Array","fill","shufflePositions","randomOffset","Math","floor","random","i","flap","dataset","paused","position","render","newText","reduce","innerHTML","console","log"],"sources":["/Users/maximeconceicao/personal_repos/sweet-portfolio/src/helpers/FlapText.js"],"sourcesContent":["export default class FlapText {\n  constructor(element, alphabet) {\n    this.element = element;\n    this.alphabet = alphabet;\n    this.currentPositions = [];\n    this.targetPositions = [];\n    this.randomPositions = [];\n  }\n\n  setInitialPositions(text) {\n    const textArray = text.split(\"\");\n    const textLength = textArray.length;\n\n    textArray.forEach((char, index) => {\n      const charIndex = this.alphabet.indexOf(char);\n      if (charIndex === -1) {\n        this.alphabet.push(char);\n        this.targetPositions[index] = this.alphabet.length - 1;\n      } else {\n        this.targetPositions[index] = charIndex;\n      }\n    });\n    this.currentPositions = [...this.targetPositions];\n    this.randomPositions = Array(textLength).fill(0);\n  }\n\n  shufflePositions() {\n    const randomOffset = Math.floor(10 * Math.random()) + 5;\n    for (let i = 0; i < this.currentPositions.length; i++) {\n      this.currentPositions[i] =\n        (this.currentPositions[i] + this.alphabet.length - randomOffset) %\n        this.alphabet.length;\n      this.randomPositions[i] = Math.floor(10 * Math.random());\n    }\n  }\n\n  flap() {\n    if (this.element.dataset.paused !== \"false\") {\n      return;\n    }\n    this.currentPositions.forEach((position, index) => {\n      if (this.randomPositions[index] > 0) {\n        this.randomPositions[index]--;\n      } else if (this.currentPositions[index] !== this.targetPositions[index]) {\n        this.currentPositions[index] =\n          (this.currentPositions[index] + 1) % this.alphabet.length;\n      }\n    });\n  }\n\n  render() {\n    const newText = this.currentPositions.reduce((text, position) => {\n      let char = this.alphabet[position];\n      if (char === \">\") {\n        char = \"&gt;\";\n      } else if (char === \"<\") {\n        char = \"&lt;\";\n      }\n      return text + char;\n    }, \"\");\n    if (this.element.innerHTML !== newText) {\n      this.element.innerHTML = newText;\n      console.log(\"NEW TEXT\", newText);\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import SweetBackground from \"./components/SweetBackground.vue\";\nimport FlapText from \"./helpers/FlapText\";\nimport AppBase from \"./layout/AppBase.vue\";\nexport default {\n  name: \"App\",\n  components: {\n    AppBase,\n    SweetBackground\n  },\n\n  mounted() {\n    this.$nextTick(() => {\n      this.initFlapText();\n    });\n  },\n\n  methods: {\n    initFlapText() {\n      const characters = \"\\\"'“”‘’¹²³!#$&%()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~½¼¡«»×▓▒░│┤▀└┴┬├─┼┐┌└┘\".split(\"\");\n      const shuffledCharacters = characters.sort((a, b) => 0.5 - Math.random());\n      const flapTextElements = [];\n\n      const handleMouseEnter = flapText => {\n        flapText.shufflePositions();\n      };\n\n      document.querySelectorAll(\".flap\").forEach(flapElement => {\n        const lines = flapElement.innerText.trimEnd().split(\"\\n\").map(line => line.trimEnd().replaceAll(\"\\t\", \"\"));\n        console.log(\"LINEs\", lines);\n        flapElement.innerHTML = \"\";\n        lines.forEach(line => {\n          const span = document.createElement(\"span\");\n          span.dataset.paused = \"true\";\n          flapElement.appendChild(span);\n          new IntersectionObserver(entries => {\n            if (entries[0].isIntersecting === true) {\n              span.dataset.paused = \"false\";\n            }\n          }, {\n            threshold: [0]\n          }).observe(span);\n          const flapText = new FlapText(span, shuffledCharacters);\n          flapText.setInitialPositions(line);\n          flapText.shufflePositions();\n          flapText.render();\n          span.addEventListener(\"mouseenter\", () => {\n            handleMouseEnter(flapText);\n          });\n          flapTextElements.push(flapText);\n        });\n      });\n      let frameCount = 0;\n      requestAnimationFrame(function animate() {\n        requestAnimationFrame(animate);\n\n        if (frameCount++ % 2 === 0) {\n          for (const flapText of flapTextElements) {\n            flapText.flap();\n            flapText.render();\n          }\n        }\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAMA,OAAOA,eAAP,MAA4B,kCAA5B;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,eAAe;AACbC,MAAI,EAAE,KADO;AAEbC,YAAU,EAAE;AAAEF,WAAF;AAAWF;AAAX,GAFC;;AAGbK,SAAO,GAAG;AACR,SAAKC,SAAL,CAAe,MAAM;AACnB,WAAKC,YAAL;AACD,KAFD;AAGD,GAPY;;AAQbC,SAAO,EAAE;AACPD,gBAAY,GAAG;AACb,YAAME,UAAS,GACb,gIAAgIC,KAAhI,CACE,EADF,CADF;AAKA,YAAMC,kBAAiB,GAAIF,UAAU,CAACG,IAAX,CAAgB,CAACC,CAAD,EAAIC,CAAJ,KAAU,MAAMC,IAAI,CAACC,MAAL,EAAhC,CAA3B;AAEA,YAAMC,gBAAe,GAAI,EAAzB;;AAEA,YAAMC,gBAAe,GAAKC,QAAD,IAAc;AACrCA,gBAAQ,CAACC,gBAAT;AACD,OAFD;;AAIAC,cAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmCC,OAAnC,CAA4CC,WAAD,IAAiB;AAC1D,cAAMC,KAAI,GAAID,WAAW,CAACE,SAAZ,CACXC,OADW,GAEXjB,KAFW,CAEL,IAFK,EAGXkB,GAHW,CAGNC,IAAD,IAAUA,IAAI,CAACF,OAAL,GAAeG,UAAf,CAA0B,IAA1B,EAAgC,EAAhC,CAHH,CAAd;AAIAC,eAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBP,KAArB;AACAD,mBAAW,CAACS,SAAZ,GAAwB,EAAxB;AAEAR,aAAK,CAACF,OAAN,CAAeM,IAAD,IAAU;AACtB,gBAAMK,IAAG,GAAIb,QAAQ,CAACc,aAAT,CAAuB,MAAvB,CAAb;AACAD,cAAI,CAACE,OAAL,CAAaC,MAAb,GAAsB,MAAtB;AACAb,qBAAW,CAACc,WAAZ,CAAwBJ,IAAxB;AAEA,cAAIK,oBAAJ,CACGC,OAAD,IAAa;AACX,gBAAIA,OAAO,CAAC,CAAD,CAAP,CAAWC,cAAX,KAA8B,IAAlC,EAAwC;AACtCP,kBAAI,CAACE,OAAL,CAAaC,MAAb,GAAsB,OAAtB;AACF;AACD,WALH,EAME;AAAEK,qBAAS,EAAE,CAAC,CAAD;AAAb,WANF,EAOEC,OAPF,CAOUT,IAPV;AASA,gBAAMf,QAAO,GAAI,IAAIlB,QAAJ,CAAaiC,IAAb,EAAmBvB,kBAAnB,CAAjB;AACAQ,kBAAQ,CAACyB,mBAAT,CAA6Bf,IAA7B;AACAV,kBAAQ,CAACC,gBAAT;AAEAD,kBAAQ,CAAC0B,MAAT;AAEAX,cAAI,CAACY,gBAAL,CAAsB,YAAtB,EAAoC,MAAM;AACxC5B,4BAAgB,CAACC,QAAD,CAAhB;AACD,WAFD;AAIAF,0BAAgB,CAAC8B,IAAjB,CAAsB5B,QAAtB;AACD,SAzBD;AA0BD,OAlCD;AAoCA,UAAI6B,UAAS,GAAI,CAAjB;AACAC,2BAAqB,CAAC,SAASC,OAAT,GAAmB;AACvCD,6BAAqB,CAACC,OAAD,CAArB;;AACA,YAAIF,UAAU,KAAK,CAAf,KAAqB,CAAzB,EAA4B;AAC1B,eAAK,MAAM7B,QAAX,IAAuBF,gBAAvB,EAAyC;AACvCE,oBAAQ,CAACgC,IAAT;AACAhC,oBAAQ,CAAC0B,MAAT;AACF;AACF;AACD,OARoB,CAArB;AASD;;AA7DM;AARI,CAAf","names":["SweetBackground","FlapText","AppBase","name","components","mounted","$nextTick","initFlapText","methods","characters","split","shuffledCharacters","sort","a","b","Math","random","flapTextElements","handleMouseEnter","flapText","shufflePositions","document","querySelectorAll","forEach","flapElement","lines","innerText","trimEnd","map","line","replaceAll","console","log","innerHTML","span","createElement","dataset","paused","appendChild","IntersectionObserver","entries","isIntersecting","threshold","observe","setInitialPositions","render","addEventListener","push","frameCount","requestAnimationFrame","animate","flap"],"sourceRoot":"","sources":["/Users/maximeconceicao/personal_repos/sweet-portfolio/src/App.vue"],"sourcesContent":["<template>\n  <sweet-background />\n  <app-base />\n</template>\n\n<script>\nimport SweetBackground from \"./components/SweetBackground.vue\";\nimport FlapText from \"./helpers/FlapText\";\nimport AppBase from \"./layout/AppBase.vue\";\nexport default {\n  name: \"App\",\n  components: { AppBase, SweetBackground },\n  mounted() {\n    this.$nextTick(() => {\n      this.initFlapText();\n    });\n  },\n  methods: {\n    initFlapText() {\n      const characters =\n        \"\\\"'“”‘’¹²³!#$&%()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~½¼¡«»×▓▒░│┤▀└┴┬├─┼┐┌└┘\".split(\n          \"\"\n        );\n\n      const shuffledCharacters = characters.sort((a, b) => 0.5 - Math.random());\n\n      const flapTextElements = [];\n\n      const handleMouseEnter = (flapText) => {\n        flapText.shufflePositions();\n      };\n\n      document.querySelectorAll(\".flap\").forEach((flapElement) => {\n        const lines = flapElement.innerText\n          .trimEnd()\n          .split(\"\\n\")\n          .map((line) => line.trimEnd().replaceAll(\"\\t\", \"\"));\n        console.log(\"LINEs\", lines);\n        flapElement.innerHTML = \"\";\n\n        lines.forEach((line) => {\n          const span = document.createElement(\"span\");\n          span.dataset.paused = \"true\";\n          flapElement.appendChild(span);\n\n          new IntersectionObserver(\n            (entries) => {\n              if (entries[0].isIntersecting === true) {\n                span.dataset.paused = \"false\";\n              }\n            },\n            { threshold: [0] }\n          ).observe(span);\n\n          const flapText = new FlapText(span, shuffledCharacters);\n          flapText.setInitialPositions(line);\n          flapText.shufflePositions();\n\n          flapText.render();\n\n          span.addEventListener(\"mouseenter\", () => {\n            handleMouseEnter(flapText);\n          });\n\n          flapTextElements.push(flapText);\n        });\n      });\n\n      let frameCount = 0;\n      requestAnimationFrame(function animate() {\n        requestAnimationFrame(animate);\n        if (frameCount++ % 2 === 0) {\n          for (const flapText of flapTextElements) {\n            flapText.flap();\n            flapText.render();\n          }\n        }\n      });\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\">\n@import \"./styles/style.scss\";\n</style>\n"]},"metadata":{},"sourceType":"module"}
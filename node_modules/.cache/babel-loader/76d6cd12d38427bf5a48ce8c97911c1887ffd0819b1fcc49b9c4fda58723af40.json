{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  class: \"game\"\n};\nconst _hoisted_2 = {\n  class: \"sticky-header game__back\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"material-icons\"\n}, \"arrow_back\", -1 /* HOISTED */);\nconst _hoisted_4 = {\n  id: \"main-game\"\n};\nconst _hoisted_5 = {\n  class: \"game__header\"\n};\nconst _hoisted_6 = {\n  class: \"game__header__item\"\n};\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Score\", -1 /* HOISTED */);\nconst _hoisted_8 = {\n  class: \"game-score\"\n};\nconst _hoisted_9 = {\n  class: \"game__header__item\"\n};\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Time\", -1 /* HOISTED */);\nconst _hoisted_11 = {\n  key: 0,\n  class: \"game__board\"\n};\nconst _hoisted_12 = {\n  key: 1\n};\nconst _hoisted_13 = {\n  class: \"game__scoreboard\"\n};\nconst _hoisted_14 = {\n  class: \"game__scoreboard__scores\"\n};\nconst _hoisted_15 = {\n  class: \"game__scoreboard__restart\"\n};\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"p\", null, \"PLAY AGAIN ?\", -1 /* HOISTED */);\nconst _hoisted_17 = {\n  class: \"game__scoreboard__restart__items\"\n};\nconst _hoisted_18 = {\n  class: \"game__scoreboard__restart__item\"\n};\nconst _hoisted_19 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"display-on-hover\"\n}, \"^\", -1 /* HOISTED */);\nconst _hoisted_20 = {\n  class: \"game__scoreboard__restart__item\"\n};\nconst _hoisted_21 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"display-on-hover\"\n}, \"^\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  const _component_sweet_game_timer = _resolveComponent(\"sweet-game-timer\");\n  const _component_sweet_game_sequence = _resolveComponent(\"sweet-game-sequence\");\n  const _component_sweet_game_cells = _resolveComponent(\"sweet-game-cells\");\n  const _component_sweet_game_buttons = _resolveComponent(\"sweet-game-buttons\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"header\", null, [_createVNode(_component_router_link, {\n    to: {\n      name: 'home'\n    }\n  }, {\n    default: _withCtx(() => [_hoisted_3]),\n    _: 1 /* STABLE */\n  })])]), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_hoisted_7, _createElementVNode(\"p\", _hoisted_8, _toDisplayString(_ctx.score), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_9, [_hoisted_10, _createVNode(_component_sweet_game_timer, {\n    ref: \"timer\",\n    initialCountdown: _ctx.initialCountdown,\n    onTimerFinished: _ctx.handleTimerFinished\n  }, null, 8 /* PROPS */, [\"initialCountdown\", \"onTimerFinished\"])])]), !_ctx.isGameOver ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, [_createVNode(_component_sweet_game_sequence, {\n    sequenceToFind: _ctx.sequenceToFind\n  }, null, 8 /* PROPS */, [\"sequenceToFind\"]), _ctx.playerSequence?.length ? (_openBlock(), _createBlock(_component_sweet_game_cells, {\n    key: 0,\n    playerSequence: _ctx.playerSequence\n  }, null, 8 /* PROPS */, [\"playerSequence\"])) : _createCommentVNode(\"v-if\", true), _createVNode(_component_sweet_game_buttons, {\n    onDrawShape: _ctx.onDrawShape,\n    onReverse: _ctx.onReverse,\n    onClear: _ctx.onClear\n  }, null, 8 /* PROPS */, [\"onDrawShape\", \"onReverse\", \"onClear\"])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_12, [_createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"div\", _hoisted_14, [(_openBlock(), _createElementBlock(_Fragment, null, _renderList(5, n => {\n    return _createElementVNode(\"div\", {\n      key: n,\n      class: \"game__scoreboard__scores__score\"\n    }, _toDisplayString(n) + \". MAX . . . . . . 999 \", 1 /* TEXT */);\n  }), 64 /* STABLE_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_15, [_hoisted_16, _createElementVNode(\"div\", _hoisted_17, [_createElementVNode(\"div\", _hoisted_18, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.restart())\n  }, \"YES\"), _hoisted_19]), _createElementVNode(\"div\", _hoisted_20, [_createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = $event => _ctx.redirectToHome())\n  }, \"NO\"), _hoisted_21])])])])]))])]);\n}","map":{"version":3,"names":["class","_createElementVNode","id","_createElementBlock","_hoisted_1","_hoisted_2","_createVNode","_component_router_link","to","name","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_toDisplayString","_ctx","score","_hoisted_9","_hoisted_10","_component_sweet_game_timer","ref","initialCountdown","onTimerFinished","handleTimerFinished","isGameOver","_hoisted_11","_component_sweet_game_sequence","sequenceToFind","playerSequence","length","_createBlock","_component_sweet_game_cells","_component_sweet_game_buttons","onDrawShape","onReverse","onClear","_hoisted_12","_hoisted_13","_hoisted_14","_Fragment","_renderList","n","key","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","onClick","_cache","$event","restart","_hoisted_19","_hoisted_20","redirectToHome","_hoisted_21"],"sources":["/Users/maximeconceicao/personal_repos/sweet-portfolio/src/views/GameView.vue"],"sourcesContent":["<template>\n  <div class=\"game\">\n    <div class=\"sticky-header game__back\">\n      <header>\n        <router-link :to=\"{ name: 'home' }\"\n          ><span class=\"material-icons\">arrow_back</span></router-link\n        >\n      </header>\n    </div>\n    <div id=\"main-game\">\n      <div class=\"game__header\">\n        <div class=\"game__header__item\">\n          <p>Score</p>\n          <p class=\"game-score\">{{ score }}</p>\n        </div>\n        <div class=\"game__header__item\">\n          <p>Time</p>\n          <sweet-game-timer\n            ref=\"timer\"\n            :initialCountdown=\"initialCountdown\"\n            @timerFinished=\"handleTimerFinished\"\n          />\n        </div>\n      </div>\n      <div v-if=\"!isGameOver\" class=\"game__board\">\n        <sweet-game-sequence :sequenceToFind=\"sequenceToFind\" />\n        <sweet-game-cells\n          v-if=\"playerSequence?.length\"\n          :playerSequence=\"playerSequence\"\n        />\n        <sweet-game-buttons\n          @drawShape=\"onDrawShape\"\n          @reverse=\"onReverse\"\n          @clear=\"onClear\"\n        />\n      </div>\n      <div v-else>\n        <div class=\"game__scoreboard\">\n          <div class=\"game__scoreboard__scores\">\n            <div\n              v-for=\"n in 5\"\n              :key=\"n\"\n              class=\"game__scoreboard__scores__score\"\n            >\n              {{ n }}. MAX . . . . . . 999\n            </div>\n          </div>\n          <div class=\"game__scoreboard__restart\">\n            <p>PLAY AGAIN ?</p>\n            <div class=\"game__scoreboard__restart__items\">\n              <div class=\"game__scoreboard__restart__item\">\n                <button @click=\"restart()\">YES</button>\n                <span class=\"display-on-hover\">^</span>\n              </div>\n              <div class=\"game__scoreboard__restart__item\">\n                <button @click=\"redirectToHome()\">NO</button>\n                <span class=\"display-on-hover\">^</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { defineComponent, ref, onMounted } from \"vue\";\nimport SweetGameSequence from \"@/components/SweetGame/SweetGameSequence.vue\";\nimport SweetGameCells from \"@/components/SweetGame/SweetGameCells.vue\";\nimport SweetGameButtons from \"@/components/SweetGame/SweetGameButtons.vue\";\nimport SweetGameTimer from \"@/components/SweetGame/SweetGameTimer.vue\";\n\nimport { SHAPES, START_SEQUENCE_LENGTH } from \"@/helpers/game.constants\";\nimport { random } from \"@/helpers/utils.js\";\n\nexport default defineComponent({\n  name: \"GameView\",\n  components: {\n    SweetGameSequence,\n    SweetGameCells,\n    SweetGameButtons,\n    SweetGameTimer,\n  },\n  data() {\n    return {\n      initialCountdown: 1000,\n      isGameOver: false,\n    };\n  },\n  setup() {\n    let sequenceLength = START_SEQUENCE_LENGTH;\n    let sequenceToFind = ref([]);\n    let playerSequence = ref([]);\n    let score = ref(0);\n\n    function resetGame() {\n      sequenceLength = START_SEQUENCE_LENGTH;\n      resetSequences();\n    }\n\n    function resetSequences() {\n      sequenceToFind.value = generateStartingSequence(sequenceLength);\n      playerSequence.value = resetPlayerSequence(sequenceToFind.value.length);\n    }\n\n    function generateStartingSequence(sequenceLength) {\n      const generatedSequence = [];\n      for (let i = 0; i < sequenceLength; i++) {\n        let indexOfShape = Math.floor(random(0, Object.keys(SHAPES).length));\n        generatedSequence.push(Object.values(SHAPES)[indexOfShape]);\n      }\n      return generatedSequence;\n    }\n\n    function resetPlayerSequence(sequenceLength) {\n      return Array.apply(null, Array(sequenceLength)).map(() => {\n        return null;\n      });\n    }\n\n    function onDrawShape(shape) {\n      const index = playerSequence.value.findIndex((shape) => shape === null);\n\n      if (index > -1) {\n        playerSequence.value[index] = shape;\n      } else {\n        playerSequence.value = resetPlayerSequence(sequenceToFind.value.length);\n      }\n\n      if (playerSequence.value.at(-1)) {\n        validateSequence();\n      }\n    }\n\n    function onClear() {\n      playerSequence.value = resetPlayerSequence(sequenceLength);\n    }\n\n    function validateSequence() {\n      if (\n        JSON.stringify(playerSequence.value) ===\n        JSON.stringify(sequenceToFind.value)\n      ) {\n        score.value += 1;\n        sequenceLength += 1;\n        resetSequences();\n      }\n    }\n\n    function onReverse() {\n      let playerSequenceCopy = [...playerSequence.value];\n      playerSequenceCopy.forEach((shape, index) => {\n        switch (shape) {\n          case SHAPES.STAR:\n            playerSequence.value[index] = SHAPES.TRIANGLE;\n            break;\n          case SHAPES.SQUARE:\n            playerSequence.value[index] = SHAPES.CIRCLE;\n            break;\n          case SHAPES.TRIANGLE:\n            playerSequence.value[index] = SHAPES.STAR;\n            break;\n          case SHAPES.CIRCLE:\n            playerSequence.value[index] = SHAPES.SQUARE;\n            break;\n        }\n      });\n\n      if (playerSequence.value.at(-1)) {\n        validateSequence();\n      }\n    }\n\n    onMounted(() => {\n      resetGame();\n      console.log(\"PLAYER SEQUENCE \", playerSequence.value.at(-1));\n    });\n    return {\n      sequenceToFind,\n      playerSequence,\n      score,\n      onDrawShape,\n      onReverse,\n      onClear,\n      resetGame,\n    };\n  },\n  methods: {\n    redirectToHome() {\n      this.$router.push(\"/\");\n    },\n    handleTimerFinished() {\n      this.isGameOver = true;\n    },\n    restart() {\n      this.onClear();\n      this.score = 0;\n      this.resetGame();\n      this.$refs.timer.resetTimer();\n      this.isGameOver = false;\n    },\n  },\n});\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
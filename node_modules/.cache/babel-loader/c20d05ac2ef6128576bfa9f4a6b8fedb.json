{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"main-game\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_sweet_game_sequence = _resolveComponent(\"sweet-game-sequence\");\n\n  const _component_sweet_game_cells = _resolveComponent(\"sweet-game-cells\");\n\n  const _component_sweet_game_buttons = _resolveComponent(\"sweet-game-buttons\");\n\n  return _openBlock(), _createElementBlock(\"main\", _hoisted_1, [_createVNode(_component_sweet_game_sequence, {\n    sequenceToFind: _ctx.sequenceToFind\n  }, null, 8\n  /* PROPS */\n  , [\"sequenceToFind\"]), _ctx.playerSequence?.length ? (_openBlock(), _createBlock(_component_sweet_game_cells, {\n    key: 0,\n    playerSequence: _ctx.playerSequence\n  }, null, 8\n  /* PROPS */\n  , [\"playerSequence\"])) : _createCommentVNode(\"v-if\", true), _createVNode(_component_sweet_game_buttons, {\n    onDrawShape: _ctx.onDrawShape,\n    onReverse: _ctx.onReverse\n  }, null, 8\n  /* PROPS */\n  , [\"onDrawShape\", \"onReverse\"])]);\n}","map":{"version":3,"mappings":";;AACQA,IAAE,EAAC;;;;;;;;;uBAATC,oBAOO,MAPP,cAOO,CANLC,aAAwDC,8BAAxD,EAAwD;AAAlCC,kBAAc,EAAEC;AAAkB,GAAxD,EAAoD,IAApD,EAAoD;AAAA;AAApD,IAAoD,kBAApD,CAMK,EAJGA,qBAAgBC,wBADxBC,aAGEC,2BAHF,EAGE;UAAA;AADCC,kBAAc,EAAEJ;AACjB,GAHF;;AAAA,4DAKK,EADLH,aAAoEQ,6BAApE,EAAoE;AAA/CC,eAAS,EAAEN,gBAAoC;AAAtBO,aAAO,EAAEP;AAAa,GAApE;;AAAA,iCACK,CAPP","names":["id","_createElementBlock","_createVNode","_component_sweet_game_sequence","sequenceToFind","_ctx","length","_createBlock","_component_sweet_game_cells","playerSequence","_component_sweet_game_buttons","onDrawShape","onReverse"],"sourceRoot":"","sources":["/home/maxime/personal_repos/sweet-portfolio/src/views/GameView.vue"],"sourcesContent":["<template>\n  <main id=\"main-game\">\n    <sweet-game-sequence :sequenceToFind=\"sequenceToFind\" />\n    <sweet-game-cells\n      v-if=\"playerSequence?.length\"\n      :playerSequence=\"playerSequence\"\n    />\n    <sweet-game-buttons @drawShape=\"onDrawShape\" @reverse=\"onReverse\" />\n  </main>\n</template>\n\n<script>\nimport { defineComponent, ref, onMounted } from \"vue\";\nimport SweetGameSequence from \"@/components/SweetGameSequence.vue\";\nimport SweetGameCells from \"@/components/SweetGameCells.vue\";\nimport SweetGameButtons from \"@/components/SweetGameButtons.vue\";\nimport { SHAPES, START_SEQUENCE_LENGTH } from \"@/helpers/game.constants\";\nimport { random } from \"@/helpers/utils.js\";\n\nexport default defineComponent({\n  name: \"GameView\",\n  components: { SweetGameSequence, SweetGameCells, SweetGameButtons },\n  setup() {\n    let sequenceToFind = ref([]);\n    let playerSequence = ref([]);\n    let score = 0;\n\n    function resetGame() {\n      sequenceToFind.value = generateStartingSequence(START_SEQUENCE_LENGTH);\n      playerSequence.value = resetPlayerSequence();\n    }\n\n    function generateStartingSequence(sequenceLength) {\n      const generatedSequence = [];\n      for (let i = 0; i < START_SEQUENCE_LENGTH; i++) {\n        let indexOfShape = Math.floor(random(0, Object.keys(SHAPES).length));\n        generatedSequence.push(Object.values(SHAPES)[indexOfShape]);\n      }\n      return generatedSequence;\n    }\n\n    function resetPlayerSequence() {\n      playerSequence.value = Array.apply(\n        null,\n        Array(sequenceToFind.value.length)\n      ).map(() => {\n        return null;\n      });\n    }\n\n    function onDrawShape(shape) {\n      console.log(\"On Draw Shape ! \", shape, playerSequence.value);\n    }\n\n    function onReverse() {\n      console.log(\"REVERSE !\");\n    }\n\n    onMounted(() => {\n      resetGame();\n      console.log(\"PLAYER SEQUENCE \", playerSequence.value);\n    });\n    return { sequenceToFind, playerSequence, onDrawShape, onReverse };\n  },\n});\n</script>\n"]},"metadata":{},"sourceType":"module"}
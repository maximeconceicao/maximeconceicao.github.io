{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_sweet_game_solution = _resolveComponent(\"sweet-game-solution\");\n\n  return _openBlock(), _createBlock(_component_sweet_game_solution, {\n    sequenceToFind: _ctx.sequenceToFind\n  }, null, 8\n  /* PROPS */\n  , [\"sequenceToFind\"]);\n}","map":{"version":3,"mappings":";;;;uBACEA,aAA4EC,8BAA5E,EAA4E;AAAtDC,kBAAc,EAAEC;AAAsC,GAA5E,EAAoD,IAApD,EAAoD;AAAA;AAApD,IAAoD,kBAApD","names":["_createBlock","_component_sweet_game_solution","sequenceToFind","_ctx"],"sourceRoot":"","sources":["/home/maxime/personal_repos/sweet-portfolio/src/views/GameView.vue"],"sourcesContent":["<template>\n  <sweet-game-solution :sequenceToFind=\"sequenceToFind\"></sweet-game-solution>\n</template>\n\n<script>\nimport { defineComponent, ref, onMounted } from \"vue\";\nimport SweetGameSolution from \"@/components/SweetGameSolution.vue\";\nimport { SHAPES, START_SEQUENCE_LENGTH } from \"@/helpers/game.constants\";\nimport { random } from \"@/helpers/utils.js\";\n\nexport default defineComponent({\n  name: \"GameView\",\n  components: { SweetGameSolution },\n  setup() {\n    let sequenceToFind = [];\n    let playerSequence = [];\n    let score = 0;\n\n    function resetGame() {\n      sequenceToFind = generateStartingSequence(START_SEQUENCE_LENGTH);\n    }\n\n    function generateStartingSequence(sequenceLength) {\n      const generatedSequence = [];\n      for (let i = 0; i < START_SEQUENCE_LENGTH; i++) {\n        let indexOfShape = Math.floor(random(0, Object.keys(SHAPES).length));\n        generatedSequence.push(Object.values(SHAPES)[indexOfShape]);\n      }\n      return generatedSequence;\n    }\n\n    onMounted(() => {\n      sequenceToFind = generateStartingSequence(START_SEQUENCE_LENGTH);\n      console.log(\"GENERATE SEQUENCE : \", sequenceToFind);\n      playerSequence = new Array(START_SEQUENCE_LENGTH);\n      console.log(\"PLAYER SEQUENCE : \", playerSequence);\n    });\n    return { sequenceToFind };\n  },\n});\n</script>\n"]},"metadata":{},"sourceType":"module"}
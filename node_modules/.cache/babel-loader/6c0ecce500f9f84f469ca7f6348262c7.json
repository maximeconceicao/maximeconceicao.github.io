{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, createElementVNode as _createElementVNode } from \"vue\";\nconst _hoisted_1 = {\n  id: \"main-projects\"\n};\nconst _hoisted_2 = {\n  class: \"grid\"\n};\nconst _hoisted_3 = {\n  class: \"grid__list\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_sweet_header = _resolveComponent(\"sweet-header\");\n\n  const _component_sweet_project_card = _resolveComponent(\"sweet-project-card\");\n\n  return _openBlock(), _createElementBlock(\"main\", _hoisted_1, [_createVNode(_component_sweet_header), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"ul\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.projects, (project, index) => {\n    return _openBlock(), _createBlock(_component_sweet_project_card, {\n      class: \"grid__list__item\",\n      key: index,\n      index: index + 1,\n      project: project\n    }, null, 8\n    /* PROPS */\n    , [\"index\", \"project\"]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])])]);\n}","map":{"version":3,"mappings":";;AACQA,IAAE,EAAC;;;AAEFC,OAAK,EAAC;;;AACLA,OAAK,EAAC;;;;;;;uBAHdC,oBAaO,MAbP,cAaO,CAZLC,aAA6BC,uBAA7B,CAYK,EAXLC,oBAUM,KAVN,cAUM,CATJA,oBAQK,IARL,cAQK,oBAPHH,oBAMsBI,SANtB,EAMsB,IANtB,EAMsBC,YAJOC,cAIP,EAJe,CAA3BC,OAA2B,EAAlBC,KAAkB,KAAb;yBAFxBC,aAMsBC,6BANtB,EAMsB;AALpBX,WAAK,EAAC,kBAKc;AAHnBY,SAAG,EAAEH,KAGc;AAFnBA,WAAK,EAAEA,KAAK,IAEO;AADnBD,aAAO,EAAEA;AACU,KANtB;;AAAA;GAMsB,CANtB;;AAAA,GAOG,EARL,CASI,CAVN,CAWK,CAbP","names":["id","class","_createElementBlock","_createVNode","_component_sweet_header","_createElementVNode","_Fragment","_renderList","$data","project","index","_createBlock","_component_sweet_project_card","key"],"sourceRoot":"","sources":["/home/maxime/personal_repos/sweet-portfolio/src/components/SweetProjects.vue"],"sourcesContent":["<template>\n  <main id=\"main-projects\">\n    <sweet-header></sweet-header>\n    <div class=\"grid\">\n      <ul class=\"grid__list\">\n        <sweet-project-card\n          class=\"grid__list__item\"\n          v-for=\"(project, index) in projects\"\n          :key=\"index\"\n          :index=\"index + 1\"\n          :project=\"project\"\n        ></sweet-project-card>\n      </ul>\n    </div>\n  </main>\n</template>\n\n<script>\nimport SweetProjectCard from \"./SweetProjectCard.vue\";\nimport SweetHeader from \"./SweetHeader.vue\";\n\nexport default {\n  name: \"SweetProjects\",\n  components: {\n    SweetProjectCard,\n  },\n  data() {\n    return {\n      projects: [\n        {\n          name: \"SIDE PROJECT MANAGMENT APP\",\n          image: null,\n          categories: [],\n        },\n        {\n          name: \"PEN PLOTTING PROJECT\",\n          image: null,\n          categories: [],\n        },\n        {\n          name: \"NICE MUSIC SHIT\",\n          image: null,\n          categories: [],\n        },\n        {\n          name: \"ANOTHER SWEET PROJECT\",\n          image: null,\n          categories: [],\n        },\n        {\n          name: \"WOW SO MUCH PROJECTS\",\n          image: null,\n          categories: [],\n        },\n      ],\n    };\n  },\n  computed: {\n    chunkedProjects() {\n      return this.chunk(this.projects, 3);\n    },\n  },\n  methods: {\n    chunk(array, chunkSize) {\n      let chunkedArray = [];\n      for (let i = 0; i < array.length; i += chunkSize) {\n        const chunk = array.slice(i, i + chunkSize);\n        chunkedArray.push(chunk);\n      }\n      return chunkedArray;\n    },\n  },\n  mounted() {\n    console.log(\"SWEEt PROJECTS MOUNTED\");\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}
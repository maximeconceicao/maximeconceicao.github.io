{"ast":null,"code":"import * as PIXI from \"pixi.js\";\nimport p5 from \"p5\";\nimport Orb from \"../helpers/Orb_old\";\nimport { KawaseBlurFilter } from \"@pixi/filter-kawase-blur\";\nimport { onMounted, watch } from \"@vue/runtime-core\";\nimport { useRoute } from \"vue-router\";\nexport default {\n  name: \"SweetBackground\",\n\n  setup() {\n    let sketchInstance = null;\n    const route = useRoute();\n    watch(route, () => {\n      console.log(\"NEW ROUTE ! \");\n\n      if (sketchInstance) {\n        console.log(\"RESIZE \", sketchInstance);\n        sketchInstance.resizeCanvas(window.innerWidth, window.innerHeight);\n      }\n    });\n    onMounted(() => {\n      const sketch = s => {\n        let w = window.innerWidth;\n        let h = window.innerHeight;\n        let increment = 0.001;\n        let xoff = 0.0;\n        let yoff = 10.0;\n\n        s.setup = () => {\n          s.createCanvas(w, h);\n        };\n\n        s.draw = () => {\n          s.background(200);\n          s.fill(255);\n          xoff += increment;\n          yoff += increment;\n          const x = s.noise(xoff) * w;\n          const y = s.noise(yoff) * h;\n          s.ellipse(x, y, 200, 200);\n        };\n\n        window.onresize = function () {\n          console.log(\"HEY\"); // assigns new values for width and height variables\n\n          w = window.innerWidth;\n          h = window.innerHeight;\n          s.resizeCanvas(w, h);\n        };\n      };\n\n      sketchInstance = new p5(sketch, \"orb-sketch\");\n      /* const app = new PIXI.Application({\n        view: document.querySelector(\".orb-canvas\"),\n        resizeTo: window,\n        backgroundAlpha: 0,\n      });\n       app.stage.filters = [new KawaseBlurFilter(30, 20, true)];\n       const orbs = [];\n       let originX = window.innerWidth / 1.25;\n      let originY =\n        window.innerWidth < 1000\n          ? window.innerHeight\n          : window.innerHeight / 1.375;\n       for (let i = 0; i < 10; i++) {\n        const orb = new Orb(0xff0000, originX, originY);\n        app.stage.addChild(orb.graphics);\n         orbs.push(orb);\n      }\n       originX = window.innerWidth * 0.2;\n      originY = window.innerWidth < 1000 ? 0 : window.innerHeight * 0.275;\n       for (let i = 0; i < 10; i++) {\n        const orb = new Orb(0x0000ff, originX, originY);\n        app.stage.addChild(orb.graphics);\n         orbs.push(orb);\n      }\n       if (!window.matchMedia(\"(prefers-reduced-motion: reduce)\").matches) {\n        app.ticker.add(() => {\n          orbs.forEach((orb) => {\n            orb.update();\n            orb.render();\n          });\n        });\n      } else {\n        orbs.forEach((orb) => {\n          orb.update();\n          orb.render();\n        });\n      }*/\n    });\n  }\n\n};","map":{"version":3,"mappings":"AAQA,OAAO,KAAKA,IAAZ,MAAsB,SAAtB;AACA,OAAOC,EAAP,MAAe,IAAf;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AACA,SAASC,gBAAT,QAAiC,0BAAjC;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,mBAAjC;AACA,SAASC,QAAT,QAAyB,YAAzB;AAEA,eAAe;AACbC,MAAI,EAAE,iBADO;;AAEbC,OAAK,GAAG;AACN,QAAIC,cAAa,GAAI,IAArB;AACA,UAAMC,KAAI,GAAIJ,QAAQ,EAAtB;AACAD,SAAK,CAACK,KAAD,EAAQ,MAAM;AACjBC,aAAO,CAACC,GAAR,CAAY,cAAZ;;AACA,UAAIH,cAAJ,EAAoB;AAClBE,eAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,cAAvB;AACAA,sBAAc,CAACI,YAAf,CAA4BC,MAAM,CAACC,UAAnC,EAA+CD,MAAM,CAACE,WAAtD;AACF;AACD,KANI,CAAL;AAQAZ,aAAS,CAAC,MAAM;AACd,YAAMa,MAAK,GAAKC,CAAD,IAAO;AACpB,YAAIC,IAAIL,MAAM,CAACC,UAAf;AACA,YAAIK,IAAIN,MAAM,CAACE,WAAf;AAEA,YAAIK,SAAQ,GAAI,KAAhB;AACA,YAAIC,IAAG,GAAI,GAAX;AACA,YAAIC,IAAG,GAAI,IAAX;;AAEAL,SAAC,CAACV,KAAF,GAAU,MAAM;AACdU,WAAC,CAACM,YAAF,CAAeL,CAAf,EAAkBC,CAAlB;AACD,SAFD;;AAIAF,SAAC,CAACO,IAAF,GAAS,MAAM;AACbP,WAAC,CAACQ,UAAF,CAAa,GAAb;AACAR,WAAC,CAACS,IAAF,CAAO,GAAP;AAEAL,cAAG,IAAKD,SAAR;AACAE,cAAG,IAAKF,SAAR;AACA,gBAAMO,IAAIV,CAAC,CAACW,KAAF,CAAQP,IAAR,IAAgBH,CAA1B;AACA,gBAAMW,IAAIZ,CAAC,CAACW,KAAF,CAAQN,IAAR,IAAgBH,CAA1B;AAEAF,WAAC,CAACa,OAAF,CAAUH,CAAV,EAAaE,CAAb,EAAgB,GAAhB,EAAqB,GAArB;AACD,SAVD;;AAYAhB,cAAM,CAACkB,QAAP,GAAkB,YAAY;AAC5BrB,iBAAO,CAACC,GAAR,CAAY,KAAZ,EAD4B,CAE5B;;AACAO,cAAIL,MAAM,CAACC,UAAX;AACAK,cAAIN,MAAM,CAACE,WAAX;AACAE,WAAC,CAACL,YAAF,CAAeM,CAAf,EAAkBC,CAAlB;AACD,SAND;AAOD,OA/BD;;AAiCAX,oBAAa,GAAI,IAAIR,EAAJ,CAAOgB,MAAP,EAAe,YAAf,CAAjB;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CD,KAlFQ,CAAT;AAmFD;;AAhGY,CAAf","names":["PIXI","p5","Orb","KawaseBlurFilter","onMounted","watch","useRoute","name","setup","sketchInstance","route","console","log","resizeCanvas","window","innerWidth","innerHeight","sketch","s","w","h","increment","xoff","yoff","createCanvas","draw","background","fill","x","noise","y","ellipse","onresize"],"sourceRoot":"","sources":["/home/maxime/personal_repos/sweet-portfolio/src/components/SweetBackground.vue"],"sourcesContent":["<template>\n  <!-- Canvas -->\n\n  <div id=\"orb-sketch\"></div>\n  <div class=\"test\"></div>\n</template>\n\n<script>\nimport * as PIXI from \"pixi.js\";\nimport p5 from \"p5\";\nimport Orb from \"../helpers/Orb_old\";\nimport { KawaseBlurFilter } from \"@pixi/filter-kawase-blur\";\nimport { onMounted, watch } from \"@vue/runtime-core\";\nimport { useRoute } from \"vue-router\";\n\nexport default {\n  name: \"SweetBackground\",\n  setup() {\n    let sketchInstance = null;\n    const route = useRoute();\n    watch(route, () => {\n      console.log(\"NEW ROUTE ! \");\n      if (sketchInstance) {\n        console.log(\"RESIZE \", sketchInstance);\n        sketchInstance.resizeCanvas(window.innerWidth, window.innerHeight);\n      }\n    });\n\n    onMounted(() => {\n      const sketch = (s) => {\n        let w = window.innerWidth;\n        let h = window.innerHeight;\n\n        let increment = 0.001;\n        let xoff = 0.0;\n        let yoff = 10.0;\n\n        s.setup = () => {\n          s.createCanvas(w, h);\n        };\n\n        s.draw = () => {\n          s.background(200);\n          s.fill(255);\n\n          xoff += increment;\n          yoff += increment;\n          const x = s.noise(xoff) * w;\n          const y = s.noise(yoff) * h;\n\n          s.ellipse(x, y, 200, 200);\n        };\n\n        window.onresize = function () {\n          console.log(\"HEY\");\n          // assigns new values for width and height variables\n          w = window.innerWidth;\n          h = window.innerHeight;\n          s.resizeCanvas(w, h);\n        };\n      };\n\n      sketchInstance = new p5(sketch, \"orb-sketch\");\n\n      /* const app = new PIXI.Application({\n        view: document.querySelector(\".orb-canvas\"),\n        resizeTo: window,\n        backgroundAlpha: 0,\n      });\n\n      app.stage.filters = [new KawaseBlurFilter(30, 20, true)];\n\n      const orbs = [];\n\n      let originX = window.innerWidth / 1.25;\n      let originY =\n        window.innerWidth < 1000\n          ? window.innerHeight\n          : window.innerHeight / 1.375;\n\n      for (let i = 0; i < 10; i++) {\n        const orb = new Orb(0xff0000, originX, originY);\n        app.stage.addChild(orb.graphics);\n\n        orbs.push(orb);\n      }\n\n      originX = window.innerWidth * 0.2;\n      originY = window.innerWidth < 1000 ? 0 : window.innerHeight * 0.275;\n\n      for (let i = 0; i < 10; i++) {\n        const orb = new Orb(0x0000ff, originX, originY);\n        app.stage.addChild(orb.graphics);\n\n        orbs.push(orb);\n      }\n\n      if (!window.matchMedia(\"(prefers-reduced-motion: reduce)\").matches) {\n        app.ticker.add(() => {\n          orbs.forEach((orb) => {\n            orb.update();\n            orb.render();\n          });\n        });\n      } else {\n        orbs.forEach((orb) => {\n          orb.update();\n          orb.render();\n        });\n      }*/\n    });\n  },\n};\n</script>\n\n<style>\n@supports ((-webkit-backdrop-filter: none) or (backdrop-filter: none)) {\n  .test {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    z-index: 0;\n    background: rgba(170, 196, 200, 0.1);\n    backdrop-filter: saturate(180%) blur(3rem);\n    border: 10px black;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}
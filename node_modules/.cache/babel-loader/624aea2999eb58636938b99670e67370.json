{"ast":null,"code":"import utils from \"./utils\";\nimport { debounce } from \"debounce\";\n\nclass Orb {\n  constructor(originX, originY, fillColor) {\n    this.bounds = this.setBounds(originX, originY);\n    this.x = utils.random(this.bounds[\"x\"].min, this.bounds[\"x\"].max);\n    this.y = utils.random(this.bounds[\"y\"].min, this.bounds[\"y\"].max);\n    window.addEventListener(\"resize\", debounce(() => {\n      this.bounds = this.setBounds();\n    }, 250));\n  }\n\n  setBounds(originX, originY) {\n    const maxDist = window.innerWidth < 1000 ? window.innerWidth / 3 : window.innerWidth / 5;\n    return {\n      x: {\n        min: originX - maxDist,\n        max: originX + maxDist\n      },\n      y: {\n        min: originY - maxDist,\n        max: originY + maxDist\n      }\n    };\n  }\n\n  move() {\n    this.x += 0;\n  }\n\n  render() {//fill(fillColor);\n  }\n\n}","map":{"version":3,"sources":["/home/maxime/personal_repos/sweet-portfolio/src/helpers/Orb.js"],"names":["utils","debounce","Orb","constructor","originX","originY","fillColor","bounds","setBounds","x","random","min","max","y","window","addEventListener","maxDist","innerWidth","move","render"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,SAAlB;AACA,SAASC,QAAT,QAAyB,UAAzB;;AAEA,MAAMC,GAAN,CAAU;AACRC,EAAAA,WAAW,CAACC,OAAD,EAAUC,OAAV,EAAmBC,SAAnB,EAA8B;AACvC,SAAKC,MAAL,GAAc,KAAKC,SAAL,CAAeJ,OAAf,EAAwBC,OAAxB,CAAd;AACA,SAAKI,CAAL,GAAST,KAAK,CAACU,MAAN,CAAa,KAAKH,MAAL,CAAY,GAAZ,EAAiBI,GAA9B,EAAmC,KAAKJ,MAAL,CAAY,GAAZ,EAAiBK,GAApD,CAAT;AACA,SAAKC,CAAL,GAASb,KAAK,CAACU,MAAN,CAAa,KAAKH,MAAL,CAAY,GAAZ,EAAiBI,GAA9B,EAAmC,KAAKJ,MAAL,CAAY,GAAZ,EAAiBK,GAApD,CAAT;AAEAE,IAAAA,MAAM,CAACC,gBAAP,CACE,QADF,EAEEd,QAAQ,CAAC,MAAM;AACb,WAAKM,MAAL,GAAc,KAAKC,SAAL,EAAd;AACD,KAFO,EAEL,GAFK,CAFV;AAMD;;AAEDA,EAAAA,SAAS,CAACJ,OAAD,EAAUC,OAAV,EAAmB;AAC1B,UAAMW,OAAO,GACXF,MAAM,CAACG,UAAP,GAAoB,IAApB,GAA2BH,MAAM,CAACG,UAAP,GAAoB,CAA/C,GAAmDH,MAAM,CAACG,UAAP,GAAoB,CADzE;AAGA,WAAO;AACLR,MAAAA,CAAC,EAAE;AACDE,QAAAA,GAAG,EAAEP,OAAO,GAAGY,OADd;AAEDJ,QAAAA,GAAG,EAAER,OAAO,GAAGY;AAFd,OADE;AAKLH,MAAAA,CAAC,EAAE;AACDF,QAAAA,GAAG,EAAEN,OAAO,GAAGW,OADd;AAEDJ,QAAAA,GAAG,EAAEP,OAAO,GAAGW;AAFd;AALE,KAAP;AAUD;;AAEDE,EAAAA,IAAI,GAAG;AACL,SAAKT,CAAL,IAAU,CAAV;AACD;;AAEDU,EAAAA,MAAM,GAAG,CACP;AACD;;AApCO","sourcesContent":["import utils from \"./utils\";\nimport { debounce } from \"debounce\";\n\nclass Orb {\n  constructor(originX, originY, fillColor) {\n    this.bounds = this.setBounds(originX, originY);\n    this.x = utils.random(this.bounds[\"x\"].min, this.bounds[\"x\"].max);\n    this.y = utils.random(this.bounds[\"y\"].min, this.bounds[\"y\"].max);\n\n    window.addEventListener(\n      \"resize\",\n      debounce(() => {\n        this.bounds = this.setBounds();\n      }, 250)\n    );\n  }\n\n  setBounds(originX, originY) {\n    const maxDist =\n      window.innerWidth < 1000 ? window.innerWidth / 3 : window.innerWidth / 5;\n\n    return {\n      x: {\n        min: originX - maxDist,\n        max: originX + maxDist,\n      },\n      y: {\n        min: originY - maxDist,\n        max: originY + maxDist,\n      },\n    };\n  }\n\n  move() {\n    this.x += 0;\n  }\n\n  render() {\n    //fill(fillColor);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
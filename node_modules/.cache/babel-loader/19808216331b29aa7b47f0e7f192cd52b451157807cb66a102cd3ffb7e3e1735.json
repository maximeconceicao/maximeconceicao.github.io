{"ast":null,"code":"import { resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock, Transition as _Transition, withCtx as _withCtx, createVNode as _createVNode, resolveComponent as _resolveComponent, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"main\"\n};\nexport function render(_ctx, _cache) {\n  const _component_router_view = _resolveComponent(\"router-view\");\n  return _openBlock(), _createElementBlock(\"main\", _hoisted_1, [_createVNode(_component_router_view, null, {\n    default: _withCtx(({\n      Component\n    }) => [_createVNode(_Transition, {\n      name: \"fade\",\n      mode: \"out-in\"\n    }, {\n      default: _withCtx(() => [(_openBlock(), _createBlock(_resolveDynamicComponent(Component)))]),\n      _: 2 /* DYNAMIC */\n    }, 1024 /* DYNAMIC_SLOTS */)]),\n\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_router_view","Component","_Transition","name","mode","_createBlock","_resolveDynamicComponent"],"sources":["/Users/maximeconceicao/personal_repos/sweet-portfolio/src/layout/AppBase.vue"],"sourcesContent":["<template>\n  <main class=\"main\">\n    <router-view v-slot=\"{ Component }\">\n      <transition name=\"fade\" mode=\"out-in\">\n        <component :is=\"Component\" />\n      </transition>\n    </router-view>\n  </main>\n</template>\n\n<script>\nexport default {\n  name: \"AppBase\",\n  components: {},\n  data: () => ({\n    navIsOpen: false,\n  }),\n   mounted() {\n    this.initializeFlapText();\n  },\n  methods: {\n    initializeFlapText() {\n      document.addEventListener(\n        \"readystatechange\",\n        this.handleReadyStateChange\n      );\n    },\n    handleReadyStateChange() {\n      if (document.readyState === \"complete\") {\n        const characters =\n          \"\\\"'“”‘’¹²³!#$&%()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~½¼¡«»×▓▒░\".split(\n            \"\"\n          );\n\n        const shuffledCharacters = characters.sort(\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          (_a: string, _b: string) => 0.5 - Math.random()\n        );\n\n        (function () {\n          const flapTextElements: FlapText[] = [];\n\n          document.querySelectorAll(\".flap\").forEach((flapElement) => {\n            const lines = (flapElement as HTMLElement).innerText\n              .trimEnd()\n              .split(\"\\n\")\n              .map((line: string) => line.trimEnd().replaceAll(\"\\t\", \"\"));\n            flapElement.innerHTML = \"\";\n\n            lines.forEach((line: string) => {\n              const span = document.createElement(\"span\");\n              span.dataset.paused = \"true\";\n              flapElement.appendChild(span);\n\n              new IntersectionObserver(\n                (entries) => {\n                  if (entries[0].isIntersecting === true) {\n                    span.dataset.paused = \"false\";\n                  }\n                },\n                { threshold: [0] }\n              ).observe(span);\n\n              const flapText = new FlapText(span, shuffledCharacters);\n              flapText.setInitialPositions(line);\n              flapText.shufflePositions();\n\n              flapText.render();\n\n              span.addEventListener(\"mouseenter\", () => {\n                flapText.shufflePositions();\n              });\n\n              flapTextElements.push(flapText);\n            });\n          });\n\n          let frameCount = 0;\n          requestAnimationFrame(function animate() {\n            requestAnimationFrame(animate);\n            if (frameCount++ % 2 === 0) {\n              for (const flapText of flapTextElements) {\n                flapText.flap();\n                flapText.render();\n              }\n            }\n          });\n        })();\n      }\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\">\n.main {\n  position: relative;\n}\n</style>\n"],"mappings":";;EACQA,KAAK,EAAC;AAAM;;;uBAAlBC,mBAAA,CAMO,QANPC,UAMO,GALLC,YAAA,CAIcC,sBAAA;sBAHZ,CAEa;MAHQC;IAAS,OAC9BF,YAAA,CAEaG,WAAA;MAFDC,IAAI,EAAC,MAAM;MAACC,IAAI,EAAC;;wBAC3B,MAA6B,E,cAA7BC,YAAA,CAA6BC,wBAAA,CAAbL,SAAS,I"},"metadata":{},"sourceType":"module","externalDependencies":[]}